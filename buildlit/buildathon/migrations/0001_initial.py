# Generated by Django 5.2.3 on 2025-08-03 06:40

import buildathon.models
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("profiles", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Buildathon",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=275)),
                ("description", models.TextField()),
                ("start_date", models.DateTimeField(default=django.utils.timezone.now)),
                ("end_date", models.DateTimeField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("is_team_based", models.BooleanField(default=False)),
                (
                    "max_team_size",
                    models.IntegerField(blank=True, default=4, null=True),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "banner",
                    models.ImageField(
                        blank=True, null=True, upload_to="buildathon_banners/"
                    ),
                ),
                ("category", models.CharField(max_length=100)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_buildathons",
                        to="profiles.profile",
                    ),
                ),
                (
                    "registered_participants",
                    models.ManyToManyField(
                        blank=True,
                        related_name="registered_buildathons",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BuildathonParticipant",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("joined_at", models.DateTimeField(auto_now_add=True)),
                (
                    "buildathon",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="participants",
                        to="buildathon.buildathon",
                    ),
                ),
                (
                    "name",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="buildathon_participants",
                        to="profiles.profile",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BuildathonQuestion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("question_text", models.TextField()),
                ("tag", models.CharField(blank=True, max_length=100)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "buildathon",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="questions",
                        to="buildathon.buildathon",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BuildathonSubmission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "language",
                    models.CharField(
                        choices=[
                            ("python", "Python"),
                            ("cpp", "C++"),
                            ("java", "Java"),
                            ("js", "JavaScript"),
                            ("c", "C"),
                            ("cs", "C#"),
                            ("go", "Go"),
                            ("rb", "Ruby"),
                            ("other", "Other"),
                        ],
                        default="python",
                        max_length=20,
                    ),
                ),
                (
                    "code_text",
                    models.TextField(
                        blank=True,
                        help_text="Paste your code here if not uploading a file.",
                        null=True,
                    ),
                ),
                (
                    "code_file",
                    models.FileField(
                        blank=True,
                        help_text="Upload your code file (.py, .cpp, .java, etc.)",
                        null=True,
                        upload_to="buildathon_submissions/code/",
                        validators=[
                            buildathon.models.BuildathonSubmission.validate_code_file
                        ],
                    ),
                ),
                ("submitted_at", models.DateTimeField(auto_now_add=True)),
                (
                    "buildathon",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="submissions",
                        to="buildathon.buildathon",
                    ),
                ),
                (
                    "participant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="buildathon_submissions",
                        to="profiles.profile",
                    ),
                ),
                (
                    "question",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="submissions",
                        to="buildathon.buildathonquestion",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BuildathonTeam",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("team_name", models.CharField(max_length=100)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "buildathon",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="teams",
                        to="buildathon.buildathon",
                    ),
                ),
                (
                    "team_members",
                    models.ManyToManyField(
                        blank=True,
                        related_name="buildathon_teams",
                        to="profiles.profile",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="QuestionAttachment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        upload_to="question_attachments/",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                ["pdf", "zip", "txt"]
                            )
                        ],
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="question_images/",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                ["jpg", "jpeg", "png"]
                            )
                        ],
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attachments",
                        to="buildathon.buildathonquestion",
                    ),
                ),
            ],
            options={
                "ordering": ["created_at"],
            },
        ),
        migrations.CreateModel(
            name="BuildathonJudging",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "score",
                    models.FloatField(
                        default=0,
                        help_text="Score given to the submission by the judge",
                    ),
                ),
                (
                    "feedback",
                    models.TextField(
                        blank=True,
                        help_text="Optional feedback from the judge",
                        null=True,
                    ),
                ),
                ("judged_at", models.DateTimeField(auto_now_add=True)),
                (
                    "judge",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="buildathon_judgings",
                        to="profiles.profile",
                    ),
                ),
                (
                    "submission",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="judgings",
                        to="buildathon.buildathonsubmission",
                    ),
                ),
            ],
            options={
                "unique_together": {("submission", "judge")},
            },
        ),
        migrations.CreateModel(
            name="BuildathonWinner",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "score",
                    models.FloatField(
                        default=0, help_text="Final score achieved by this winner"
                    ),
                ),
                (
                    "won_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="Time when the winner was recorded"
                    ),
                ),
                (
                    "buildathon",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="winners",
                        to="buildathon.buildathon",
                    ),
                ),
                (
                    "participant",
                    models.ForeignKey(
                        help_text="Profile of the winner (individual or team member)",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="buildathon_wins",
                        to="profiles.profile",
                    ),
                ),
                (
                    "team",
                    models.ForeignKey(
                        blank=True,
                        help_text="Team the participant was part of, if applicable",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="wins",
                        to="buildathon.buildathonteam",
                    ),
                ),
            ],
            options={
                "unique_together": {("buildathon", "participant")},
            },
        ),
    ]
